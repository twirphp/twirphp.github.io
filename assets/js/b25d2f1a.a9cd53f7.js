"use strict";(self.webpackChunktwirphp_github_io=self.webpackChunktwirphp_github_io||[]).push([[949],{9887:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return c},default:function(){return d}});var n=o(7462),r=o(3366),a=(o(7294),o(3905)),i=["components"],s={sidebar_position:50},p="Protocol Buffers",l={unversionedId:"protocol-buffers",id:"protocol-buffers",isDocsHomePage:!1,title:"Protocol Buffers",description:"Twirp uses Protocol Buffers (protobuf) as its IDL (interface definition language).",source:"@site/docs/protocol-buffers.md",sourceDirName:".",slug:"/protocol-buffers",permalink:"/docs/protocol-buffers",editUrl:"https://github.com/twirphp/twirphp.github.io/edit/main/docs/protocol-buffers.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Code generation",permalink:"/docs/code-generation"}},c=[{value:"Protocol Buffers and PHP",id:"protocol-buffers-and-php",children:[],level:2},{value:"Using <code>protoc</code>",id:"using-protoc",children:[],level:2}],u={toc:c};function d(e){var t=e.components,o=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"protocol-buffers"},"Protocol Buffers"),(0,a.kt)("p",null,"Twirp uses ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers"},"Protocol Buffers")," (protobuf) as its IDL (interface definition language)."),(0,a.kt)("p",null,"Protobuf is not just an IDL though: it's also a binary serialization format (like JSON) and it comes with a ",(0,a.kt)("em",{parentName:"p"},"compiler")," (",(0,a.kt)("inlineCode",{parentName:"p"},"protoc")," tool) for generating\nlanguage specific code (message objects, client stubs, server interfaces) from interface definitions."),(0,a.kt)("p",null,"These traits make it a powerful tool in the polyglot world we live in today."),(0,a.kt)("p",null,"Learn more about protobuf in the ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers"},"official documentation"),"."),(0,a.kt)("h2",{id:"protocol-buffers-and-php"},"Protocol Buffers and PHP"),(0,a.kt)("p",null,"Let's take a look at the example from the ",(0,a.kt)("a",{parentName:"p",href:"/docs/quickstart"},"Quickstart guide"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-protobuf",metastring:'title="service.proto"',title:'"service.proto"'},"message Hat {\n  int32 size = 1;\n  string color = 2;\n  string name = 3;\n}\n\nmessage Size {\n  int32 inches = 1;\n}\n\nservice Haberdasher {\n  rpc MakeHat(Size) returns (Hat);\n}\n")),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"A couple things were removed from the example for brevity.\nCheck out the ",(0,a.kt)("a",{parentName:"p",href:"/docs/quickstart#create-a-new-service-definition"},"Quickstart guide")," for the complete example."))),(0,a.kt)("p",null,'It contains two types of "objects": ',(0,a.kt)("strong",{parentName:"p"},"messages")," and ",(0,a.kt)("strong",{parentName:"p"},"services"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"protoc")," contains builtin support for generating PHP classes for ",(0,a.kt)("em",{parentName:"p"},"messages"),",\nbut for generating code for ",(0,a.kt)("em",{parentName:"p"},"services")," you need external plugins, like gRPC or TwirPHP."),(0,a.kt)("p",null,"For more details, check out the ",(0,a.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers/docs/reference/php-generated"},"PHP reference")," in the protobuf documentation."),(0,a.kt)("h2",{id:"using-protoc"},"Using ",(0,a.kt)("inlineCode",{parentName:"h2"},"protoc")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"protoc")," has a bunch of different parameters, but arguably the ",(0,a.kt)("inlineCode",{parentName:"p"},"--<plugin>_out")," is the most important one.\nThis is how you tell ",(0,a.kt)("inlineCode",{parentName:"p"},"protoc")," that you would like to generate code for a certain language or external plugin."),(0,a.kt)("p",null,"As mentioned above, ",(0,a.kt)("inlineCode",{parentName:"p"},"protoc")," comes with a bunch of builtin plugins for languages and PHP is one of them."),(0,a.kt)("p",null,"To generate PHP classes for the messages in the ",(0,a.kt)("inlineCode",{parentName:"p"},"service.proto")," example above,\nyou simply need to tell ",(0,a.kt)("inlineCode",{parentName:"p"},"protoc")," where you want the generated code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir generated\nprotoc --php_out=generated service.proto\n")),(0,a.kt)("p",null,"External plugins work similarly, except they are implemented as separate binaries, conventionally called ",(0,a.kt)("inlineCode",{parentName:"p"},"protoc-gen-<plugin>"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"protoc --myplugin_out=generated service.proto\n")),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"protoc")," tries to find plugins in the ",(0,a.kt)("inlineCode",{parentName:"p"},"PATH"),", but you can also point it to a custom binary\n(which is extremely useful during development):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"protoc --plugin=protoc-gen-myplugin=bin/protoc-gen-myplugin --myplugin_out=generated service.proto\n")))}d.isMDXComponent=!0}}]);